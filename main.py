"""
Постановка задачи:
-Отрисовать игровое поле. Прямогуольник 10х20. Расчертить на клетки.
-Создать фигуры. (Упростить? 3-4 фигуры?).
    -Фигуры должны поворачиваться на 90 градусов по команде игрока.
    Влево и вправо. Так же необходимо иметь возможность ускоренно
    перемещать их вниз.
-Рандомная фигура появляется в верхней позиции, после чего начинает
движение вниз до тех пор, пока под каждым блоком снизу есть свободное место.
-При касании фигуры нижнего ряда или другой фигуры её позиция сохраняется,
фигура останавливается.
-При заполнении ряда удалять все сегменты в ряду, увеличивать счёт.
-Опционально: увеличивать скорость за каждые несколько заполненных рядов.
"""
import cv2
import random
import numpy as np

"""
TODO:
-Реализовать сдвиг сегмента влево-вправо;
-Реализовать "падение" сегментов;
-Реализовать ичезновение при сборе ряда(по цвету пикселей??);
-Реализовать вращение фигур;

Фичи:
-Настройка сложности?
-Ускорение игры со временем?
-Запоминание рекорда?
"""

IN_GAME = True #Продолжается ли игра
SEG_SIZE = 25 #Размер одного сегмента

#Набор используемых фигур
figures_type = [[(-1, 0), (-2, 0), (0, 0), (1, 0)],
               [(0, -1), (-1, -1), (-1, 0), (0, 0)],
               [(-1, 0), (-1, 1), (0, 0), (0, -1)],
               [(0, 0), (-1, 0), (0, 1), (-1, -1)],
               [(0, 0), (0, -1), (0, 1), (-1, -1)],
               [(0, 0), (0, -1), (0, 1), (1, -1)],
               [(0, 0), (0, -1), (0, 1), (-1, 0)]]


def create_segment(x,y,color = (0, 255, 0)):
    """Создаёт квадрат размером в 1 сегмент
    в указанных координатах. Координаты указывать в пикселях."""
    cv2.rectangle(field, (x, y), (x+SEG_SIZE, y+SEG_SIZE),
    color, thickness=1)


def draw_figure(x, y, type):
    """Создаёт серию квадратов по указанным координатам.
    Использовать в сочетании с figures_type[N]."""
    figure = figures_type[type]
    for segment in figure:
        create_segment(x*SEG_SIZE+segment[0]*SEG_SIZE,
                       y*SEG_SIZE+segment[1]*SEG_SIZE,(255,255,255))


#Создание поля для игры
field = np.zeros((SEG_SIZE*20+1, SEG_SIZE*10+1, 3), dtype = 'uint8')

#Разметка игрового поля на сегменты
for x in range(10):
    for y in range(20):
        create_segment(x*SEG_SIZE,y*SEG_SIZE)

draw_figure(6,6,1) #Пример фигуры

cv2.imshow('Tetris v0.0.1', field)
cv2.waitKey(0)
